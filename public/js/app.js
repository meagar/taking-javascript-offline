// Generated by CoffeeScript 1.6.3
(function() {
  var _ref, _ref1, _ref2, _ref3, _ref4, _ref5,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = {
    Models: {},
    Collections: {},
    Views: {}
  };

  App.Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      _ref = Router.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Router.prototype.routes = {
      '': 'index',
      'posts/new': 'newPost',
      'posts/:id': 'editPost'
    };

    Router.prototype.initialize = function() {
      this.collection = new App.Collections.Posts();
      return this.collection.fetch();
    };

    Router.prototype._show = function(view) {
      var _ref1;
      if ((_ref1 = this._view) != null) {
        _ref1.remove();
      }
      this._view = view;
      return $('#content').append(this._view.render().el);
    };

    Router.prototype.index = function() {
      console.log("Router#index");
      return this._show(new App.Views.Index({
        collection: this.collection
      }));
    };

    Router.prototype.newPost = function() {
      var model;
      console.log("Router#newPost");
      model = new App.Models.Post;
      return this._show(new App.Views.PostForm({
        collection: this.collection,
        model: model
      }));
    };

    Router.prototype.editPost = function(id) {
      var model;
      console.log("Router#editPost");
      model = this.collection.get(id);
      return this._show(new App.Views.PostForm({
        collection: this.collection,
        model: model
      }));
    };

    return Router;

  })(Backbone.Router);

  App.Views.View = (function(_super) {
    __extends(View, _super);

    View._templateCache = {};

    function View() {
      View.__super__.constructor.apply(this, arguments);
      if (this.templateName) {
        this.setTemplate(this.templateName);
      }
    }

    View.prototype.setTemplate = function(template) {
      return this.template = this.loadTemplate(template);
    };

    View.prototype.loadTemplate = function(template) {
      var $el, t;
      if (t = App.Views.View._templateCache[template]) {
        return t;
      }
      $el = $("#tmpl-" + template);
      if ($el.length !== 1) {
        throw Error("Template not found: tmpl-" + template);
      }
      return App.Views.View._templateCache[template] = Handlebars.compile($el.html());
    };

    View.prototype.render = function(data) {
      if (data == null) {
        data = this.model.toJSON();
      }
      this.$el.html(this.template(data));
      return this;
    };

    return View;

  })(Backbone.View);

  App.Views.Index = (function(_super) {
    __extends(Index, _super);

    function Index() {
      _ref1 = Index.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Index.prototype.templateName = 'index';

    Index.prototype.initialize = function() {
      var _this = this;
      this.listenTo(this.collection, 'sync', this.render);
      return $(window).bind('online, offline', function() {
        return _this.render();
      });
    };

    Index.prototype.render = function() {
      var post;
      this.$el.html(this.template({
        online: navigator.onLine
      }));
      this.$('ul#posts').html((function() {
        var _i, _len, _ref2, _results;
        _ref2 = this.collection.models;
        _results = [];
        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
          post = _ref2[_i];
          _results.push(new App.Views.Post({
            model: post
          }).render().el);
        }
        return _results;
      }).call(this));
      return this;
    };

    return Index;

  })(App.Views.View);

  App.Views.Post = (function(_super) {
    __extends(Post, _super);

    function Post() {
      _ref2 = Post.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    Post.prototype.tagName = 'li';

    Post.prototype.templateName = 'post';

    Post.prototype.className = 'post';

    Post.prototype.events = {
      'click a.delete': 'clickDelete'
    };

    Post.prototype.initialize = function() {
      this.listenTo(this.model, 'remove', this.remove);
      return this.listenTo(this.model, 'sync', this.render);
    };

    Post.prototype.clickDelete = function(e) {
      e.preventDefault();
      if (confirm("Are you sure?")) {
        return this.model.destroy();
      }
    };

    Post.prototype.render = function() {
      var data;
      data = this.model.toJSON();
      data.last_updated = moment(parseInt(data.updated_at, 10)).fromNow();
      return Post.__super__.render.call(this, data);
    };

    return Post;

  })(App.Views.View);

  App.Views.PostForm = (function(_super) {
    __extends(PostForm, _super);

    function PostForm() {
      _ref3 = PostForm.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    PostForm.prototype.templateName = 'post-form';

    PostForm.prototype.events = {
      'submit form': 'save'
    };

    PostForm.prototype.save = function(e) {
      e.preventDefault();
      this.model.set({
        title: this.$('#title').val(),
        about: this.$('#about').val()
      });
      this.collection.create(this.model);
      return App.router.navigate('#', {
        trigger: true
      });
    };

    return PostForm;

  })(App.Views.View);

  App.Models.Post = (function(_super) {
    __extends(Post, _super);

    function Post() {
      _ref4 = Post.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    Post.prototype.idAttribute = '_id';

    Post.prototype.url = function() {
      if (this.id) {
        return "/api/posts/" + this.id;
      } else {
        return "/api/posts";
      }
    };

    return Post;

  })(Backbone.Model);

  App.Collections.Posts = (function(_super) {
    __extends(Posts, _super);

    function Posts() {
      _ref5 = Posts.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    Posts.prototype.model = App.Models.Post;

    Posts.prototype.url = '/api/posts';

    return Posts;

  })(Backbone.Collection);

  $(function() {
    App.router = new App.Router();
    return Backbone.history.start();
  });

}).call(this);
